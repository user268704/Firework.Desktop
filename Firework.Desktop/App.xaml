<Application x:Class="Firework.Desktop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Firework.Desktop"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             xmlns:bindingConverters="clr-namespace:Firework.Desktop.BindingConverters">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:ThemesDictionary Theme="Dark" />
                <!--
                <ui:ThemesDictionary Theme="Light" />
                -->
                <ui:ControlsDictionary />
            </ResourceDictionary.MergedDictionaries>
            
            <bindingConverters:VisibilityBoolConverter x:Key="VisibilityBoolConverter"/>
            <bindingConverters:EmptyStringConnectionConverter x:Key="EmptyStringConnectionConverter"/>
            
            <SolidColorBrush x:Key="ButtonColor" Color="#2979ff" />
            <SolidColorBrush x:Key="HoverButtonColor" Color="#363A49"/>
            <SolidColorBrush x:Key="MenuItemHoverColor" Color="#363A49"/>

            <SolidColorBrush x:Key="CloseButtonColor" Color="#7A011A"/>

            <SolidColorBrush x:Key="TextBoxTextColor" Color="#656565"/>
            <SolidColorBrush x:Key="TextColor" Color="#212121" />
            <SolidColorBrush x:Key="SecondTextColor" Color="#212121" />
            <SolidColorBrush x:Key="BackgroundColor" Color="#EEE" />
            <SolidColorBrush x:Key="SecondBackgroundColor" Color="#fafafa" />
            <SolidColorBrush x:Key="TextButtonColor" Color="#d9d9d9" />
            <SolidColorBrush x:Key="AccentColor" Color="#4CC2FF" />

            <FontFamily x:Key="MainFont">.\Resources\Fonts\semibold.ttf</FontFamily>
            
            <Style x:Key="MainTextStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="20" />
                <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
                <Setter Property="Foreground" Value="{StaticResource TextColor}" />
            </Style>

            <Style x:Key="InfoBarText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="13" />
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
                <Setter Property="Foreground" Value="{StaticResource TextColor}" />
            </Style>
        
        <Style x:Key="WindowHeaderStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource SecondTextColor}"/>
            <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
        </Style>

        <Style x:Key="SecondTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Foreground" Value="{StaticResource SecondTextColor}" />
        </Style>
            
            <Style x:Key="MenuItemButton" TargetType="Button">
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Background" Value="{StaticResource ButtonColor}"/>
                <Setter Property="Foreground" Value="{StaticResource TextButtonColor}"/>
                
                <!--
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="4"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Width="{TemplateBinding Width}"
                                                  Height="{TemplateBinding Width}"
                                                  Margin="{TemplateBinding Margin}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                -->
                
                <!--
                <Style.Triggers>
                    <Trigger Property="Control.IsMouseOver" Value="True">
                        <Setter Property="Button.Background" Value="{StaticResource MenuItemHoverColor}"/>
                    </Trigger>
                </Style.Triggers>
            -->
            </Style>
            
        <Style x:Key="MainButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="4"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}">
                            
                            <ContentPresenter 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Width}"
                                Margin="{TemplateBinding Margin}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="3" ShadowDepth="2" Opacity="0.5"/>
                </Setter.Value>
            </Setter>
            
            <!--<Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>-->
            <Setter Property="Padding" Value="5" />
            <Setter Property="Background" Value="{StaticResource ButtonColor}" />
            <Setter Property="Foreground" Value="{StaticResource TextButtonColor}" />
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Button.Background" Value="{StaticResource HoverButtonColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

            <Style x:Key="MenuBurgerButton" TargetType="Button">
                <Setter Property="Margin" Value="10"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Width" Value="30"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Background" Value="{StaticResource ButtonColor}"/>
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="4"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Width="{TemplateBinding Width}"
                                                  Height="{TemplateBinding Width}"
                                                  Margin="{TemplateBinding Margin}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
        <Style x:Key="MainTextBoxStyle" TargetType="TextBox">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBoxBase">
                        <Border Background="{TemplateBinding Background}"
                                x:Name="TextBoxBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4"> 
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="GotFocus">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard TargetName="TextBoxBorder" TargetProperty="BorderThickness">
                                            <ThicknessAnimation From="0, 0, 0, 0"
                                                                To="0, 0, 0, 4"
                                                                Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="LostFocus">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard TargetName="TextBoxBorder" TargetProperty="BorderThickness">
                                            <ThicknessAnimation From="0, 0, 0, 4"
                                                                To="0, 0, 0, 0"
                                                                Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
            <Setter Property="Background" Value="{StaticResource SecondBackgroundColor}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBoxTextColor}"/>
        </Style>

        <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource BackgroundColor}" />
            <Setter Property="Foreground" Value="{StaticResource TextColor}" />
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="DataGridColumnHeader.Background" Value="{StaticResource HoverButtonColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DataGridColumnStyle" TargetType="DataGridCell">
            <Setter Property="Background" Value="{StaticResource SecondBackgroundColor}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{StaticResource TextColor}" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="DataGridCell.Background" Value="{StaticResource SecondBackgroundColor}" />
                    <Setter Property="DataGridCell.BorderBrush" Value="{StaticResource AccentColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>

            <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
                <Setter Property="Foreground" Value="{StaticResource TextColor}" />
            </Style>
        
            <Style x:Key="BorderCard" TargetType="Border">
                <Setter Property="Background" Value="{StaticResource SecondBackgroundColor}"/>
                <Setter Property="CornerRadius" Value="10, 0, 0, 0"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="3" ShadowDepth="2" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="MainWindowStyle" TargetType="Window">
                <Setter Property="MinHeight" Value="300"/>
                <Setter Property="MinWidth" Value="200"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#232733"/>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="SecondPageStyle" TargetType="Page">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#232733"/>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>